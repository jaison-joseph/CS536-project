[General]
network = NSFNetwork
sim-time-limit = 1000s

# Recording
**.vector-recording = true
**.scalar-recording = true

# Enable IPv4
**.hasIpv4 = true

# Enable routing
**.ipv4.*.routingTable.forwarding = true
**.routingTable.routingFile = ""  # Let the configurator handle routing

# Configure all nodes to run UDP apps
**.n0.numUdpApps = 1
**.n1.numUdpApps = 1
**.n2.numUdpApps = 2

# Configure n0 as sender to n1
**.n0.udpApp[0].typename = "UdpBasicApp"
**.n0.udpApp[0].destAddresses = "n1"
**.n0.udpApp[0].destPort = 5000
**.n0.udpApp[0].messageLength = 1000B
**.n0.udpApp[0].sendInterval = exponential(0.1s)
**.n0.udpApp[0].startTime = 0s
**.n0.udpApp[0].stopTime = 1000s

# Configure n1 as sender to n0
**.n1.udpApp[0].typename = "UdpBasicApp"
**.n1.udpApp[0].destAddresses = "n0"
**.n1.udpApp[0].destPort = 5001
**.n1.udpApp[0].messageLength = 1000B
**.n1.udpApp[0].sendInterval = exponential(0.1s)
**.n1.udpApp[0].startTime = 0s
**.n1.udpApp[0].stopTime = 1000s

# Configure n2 as router/forwarder
**.n2.udpApp[0].typename = "UdpSink"
**.n2.udpApp[0].localPort = 5000
**.n2.udpApp[1].typename = "UdpSink"
**.n2.udpApp[1].localPort = 5001

# Configure interface settings
**.eth[*].queue.typename = "DropTailQueue"
**.eth[*].queue.dataQueue.frameCapacity = 32

# Configure hosts to use UDP
**.*.numUdpApps = 1

# Enable network layer routing
**.n*.forwarding = true

# ARP configuration
**.arp.typename = "GlobalArp"  # Use global ARP to simplify address resolution

# Configure network interfaces
**.eth[*].mac.typename = "EthernetMac"
**.eth[*].mac.queue.typename = "EtherQosQueue"
**.eth[*].mac.queue.dataQueue.typename = "DropTailQueue"
**.eth[*].mac.queue.dataQueue.frameCapacity = 100000